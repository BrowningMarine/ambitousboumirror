NEXT_PUBLIC_SITE_URL=http://localhost:3000
INTERNAL_API_SECRET=
NEXT_PUBLIC_QR_CLIENT_URL=
NEXT_PUBLIC_QR_CLIENT_ID=
NEXT_PUBLIC_QR_CLIENT_SECRET=
TRUSTED_DOMAINS=
ALLOW_ALL_FRAME_EMBEDDING=
NEXT_PUBLIC_APPWRITE_ENDPOINT=
NEXT_PUBLIC_APPWRITE_PROJECT_ID=
APPWRITE_KEY=
NEXT_PUBLIC_APPWRITE_DATABASE_ID=
NEXT_PUBLIC_APPWRITE_USER_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_BANKS_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_ACCOUNTS_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_ODRTRANS_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_LOG_WEBHOOK_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_BANK_TRANSACTION_ENTRY_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_BANKS_CONTROL_COLLECTION_ID=
NEXT_PUBLIC_APPWRITE_STATISTICS_COLLECTION_ID=
UPSTASH_REDIS_REST_URL=
UPSTASH_REDIS_REST_TOKEN=
UPSTASH_REDIS_BULLQUEUES_URL=
CASSOFLOW_WEBHOOK_APIKEY=
CASSOFLOW_MASTER_API_KEY=
CASSOFLOW_API_KEY=
ADMIN_WEBHOOK_KEY=
NEXT_PUBLIC_ONESIGNAL_APP_ID=
ONESIGNAL_REST_API_KEY=
BETTERSTACK_SOURCE_TOKEN=
SECRETAGENT_WEBHOOK_API_KEY=

# =====================================================
# Supabase Backup Database (for database resilience)
# =====================================================
# When main Appwrite database is unavailable, orders are stored in Supabase
# and synced back when main database recovers
SUPABASE_URL=
SUPABASE_SERVICE_KEY=

# Public variables for client-side Supabase realtime subscriptions
NEXT_PUBLIC_SUPABASE_URL=
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Supabase Edge Function for transaction actions (separate project if needed)
NEXT_PUBLIC_SUPABASE_FUNCTION_URL=
NEXT_PUBLIC_SUPABASE_FUNCTION_ANON_KEY=

# =====================================================
# Database-Resilient Payment System Configuration
# =====================================================
# Enable client-only payment mode (payment pages work without database)
# When true: Orders created in Supabase backup, payment URLs are encrypted
# When false: Standard behavior, requires main database
USE_CLIENT_ONLY_PAYMENT=false

# Encryption key for payment data in URLs (MUST be exactly 32 characters for AES-256)
# Generate with: openssl rand -base64 32 | cut -c1-32
PAYMENT_ENCRYPTION_KEY=

# QR code generation method for backup mode
# Options: 'local' (recommended for backup) or 'vietqr' (requires API)
NEXT_PUBLIC_CREATE_QR_BY=local